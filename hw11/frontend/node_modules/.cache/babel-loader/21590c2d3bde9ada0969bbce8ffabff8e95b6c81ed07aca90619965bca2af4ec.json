{"ast":null,"code":"export default {\n  name: \"WriteComment\",\n  data: function () {\n    return {\n      text: \"\",\n      error: \"\"\n    };\n  },\n  props: [\"post\"],\n  methods: {\n    onWriteComment: function () {\n      this.error = \"\";\n      this.$root.$emit(\"onWriteComment\", this.text, this.post);\n    }\n  },\n  beforeMount() {\n    this.$root.$on(\"onWriteCommentValidationError\", error => this.error = error);\n  }\n};","map":{"version":3,"mappings":"AAuBA;EACAA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;EACAC;IACAC;MACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","text","error","props","methods","onWriteComment","beforeMount"],"sourceRoot":"src/components/comment","sources":["WriteComment.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n        <div class=\"header\">Write Comment</div>\r\n        <div class=\"body\">\r\n            <form @submit.prevent=\"onWriteComment\">\r\n                <div class=\"field\">\r\n                    <div class=\"name\">\r\n                        <label for=\"text\">Text:</label>\r\n                    </div>\r\n                    <div class=\"value\">\r\n                        <textarea id=\"text\" name=\"text\" v-model=\"text\"></textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"error\">{{ error }}</div>\r\n                <div class=\"button-field\">\r\n                    <input type=\"submit\" value=\"Write\">\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"WriteComment\",\r\n    data: function () {\r\n        return {\r\n            text: \"\",\r\n            error: \"\"\r\n        }\r\n    },\r\n    props: [\"post\"],\r\n    methods: {\r\n        onWriteComment: function () {\r\n            this.error = \"\";\r\n            this.$root.$emit(\"onWriteComment\", this.text, this.post);\r\n        }\r\n    },\r\n    beforeMount() {\r\n        this.$root.$on(\"onWriteCommentValidationError\", error => this.error = error);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}